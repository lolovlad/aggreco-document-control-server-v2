"""empty message

Revision ID: ae93a80860c5
Revises: 
Create Date: 2024-08-27 17:31:36.668210

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ae93a80860c5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('class_brake',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('document',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('url_document', sa.String(), nullable=False),
    sa.Column('data_create', sa.DateTime(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('profession',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('state_event',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('state_object',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('type_equipment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('type_event',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('type_user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('object',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('address', sa.String(length=256), nullable=False),
    sa.Column('cx', sa.Float(), nullable=True),
    sa.Column('cy', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('counterparty', sa.String(length=256), nullable=False),
    sa.Column('id_state', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id_state'], ['state_object.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('type_brake',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id_type', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_type'], ['class_brake.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('patronymic', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('id_type', sa.Integer(), nullable=True),
    sa.Column('id_profession', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id_profession'], ['profession.id'], ),
    sa.ForeignKeyConstraint(['id_type'], ['type_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('accident',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('id_object', sa.Integer(), nullable=True),
    sa.Column('datetime_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('datetime_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('time_line', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('causes_of_the_emergency', sa.Text(), nullable=False),
    sa.Column('damaged_equipment_material', sa.Text(), nullable=False),
    sa.Column('additional_material', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id_object'], ['object.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('id_object', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('id_type', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('characteristics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id_object'], ['object.id'], ),
    sa.ForeignKeyConstraint(['id_type'], ['type_equipment.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('object_to_user',
    sa.Column('id_object', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_object'], ['object.id'], ),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id_object', 'id_user')
    )
    op.create_table('user_to_document',
    sa.Column('id_document', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('datetime_view', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_document'], ['document.id'], ),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id_document', 'id_user')
    )
    op.create_table('equipment_to_accident',
    sa.Column('id_accident', sa.Integer(), nullable=False),
    sa.Column('id_equipment', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_accident'], ['accident.id'], ),
    sa.ForeignKeyConstraint(['id_equipment'], ['equipment.id'], ),
    sa.PrimaryKeyConstraint('id_accident', 'id_equipment')
    )
    op.create_table('event',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('date_finish', sa.Date(), nullable=False),
    sa.Column('id_accident', sa.Integer(), nullable=True),
    sa.Column('id_state_event', sa.Integer(), nullable=True),
    sa.Column('id_type_event', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_accident'], ['accident.id'], ),
    sa.ForeignKeyConstraint(['id_state_event'], ['state_event.id'], ),
    sa.ForeignKeyConstraint(['id_type_event'], ['type_event.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('type_brake_to_accident',
    sa.Column('id_accident', sa.Integer(), nullable=False),
    sa.Column('id_type_brake', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_accident'], ['accident.id'], ),
    sa.ForeignKeyConstraint(['id_type_brake'], ['type_brake.id'], ),
    sa.PrimaryKeyConstraint('id_accident', 'id_type_brake')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('type_brake_to_accident')
    op.drop_table('event')
    op.drop_table('equipment_to_accident')
    op.drop_table('user_to_document')
    op.drop_table('object_to_user')
    op.drop_table('equipment')
    op.drop_table('accident')
    op.drop_table('user')
    op.drop_table('type_brake')
    op.drop_table('object')
    op.drop_table('type_user')
    op.drop_table('type_event')
    op.drop_table('type_equipment')
    op.drop_table('state_object')
    op.drop_table('state_event')
    op.drop_table('profession')
    op.drop_table('document')
    op.drop_table('class_brake')
    # ### end Alembic commands ###
